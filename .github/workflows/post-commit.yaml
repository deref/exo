---
name: post-commit
on:
  push: {}
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: "false"
jobs:
  test:
    name: Run all tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2
      # Enable tmate debugging of manually-triggered workflows if the input option was provided
      - uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - uses: actions/setup-node@v2
        with:
          node-version: 'lts/*'
          cache: 'npm'
          cache-dependency-path: "gui/package-lock.json"

      # Restore Go cache
      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
            %LocalAppData%\go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Upgrade npm
        run: npm i -g npm@latest

      - uses: docker-practice/actions-setup-docker@e2e6958abd33da9808dbd96cbaf9b4f30b44011c
        if: ${{ matrix.os == 'macos-latest' }}

      - name: Clean up after docker set up
        if: ${{ matrix.os == 'macos-latest' }}
        run: rm ./docker.rb

      # Enable tmate debugging of manually-triggered workflows if the input option was provided
      #- name: Setup tmate session
        #uses: mxschmitt/action-tmate@b926bc441c90cceb124409125658bbe544a2e1dd #v3.8
        #if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled }}

      - name: Perform tests
        run: script/ci-test.sh

      - name: Inspect docker containers
        run: docker inspect t0 t1
        if: failure()


  build-and-push-mitm-image:
    name: Build and push mitm image
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: deref/exo-mitm
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3.6.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=pep440,pattern={{version}}
            type=ref,event=branch

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
